---
apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  labels:
    app.kubernetes.io/name: {{ .Release.Name }}
  name: promote-image
  namespace: {{ .Values.pipeline.namespace }}
spec:
  params:
    - name: fromNamespace
      description: The namespace we are tagging from
    - name: toNamespace
      description: The namespace we are tagging to
    - name: imageTag
      description: The image tag
      default: latest
    - name: appName
      description: The application name
  steps:
  - name: oc-tag-image
    image: quay.io/openshift-pipeline/openshift-cli:latest
    command: ["/usr/local/bin/oc"]
    workingDir: /workspace/source/upload
    args:
    - tag
    - $(params.fromNamespace)/$(params.appName):$(params.imageTag)
    - $(params.toNamespace)/$(params.appName):$(params.imageTag)
---
apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  labels:
    app.kubernetes.io/name: {{ .Release.Name }}
  name: functional-test
  namespace: {{ .Values.pipeline.namespace }}
spec:
  params:
    - name: appResultValue
      description: The expected value
    - name: appUrl
      description: The url to curl
  steps:
  - name: verify-url
    image: quay.io/openshift-pipeline/openshift-cli:latest
    command: ["/usr/local/bin/oc"]
    workingDir: /workspace/source
    args:
    - get 
    - pods
---
apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  labels:
    app.kubernetes.io/name: {{ .Release.Name }}
  name: maven-build-binary-build
  namespace: {{ .Values.pipeline.namespace }}
spec:
  params:
    - name: fromNamespace
      description: The namespace we are tagging from
    - name: toNamespace
      description: The namespace we are tagging to
    - name: imageTag
      description: The image tag
      default: latest
    - name: appName
      description: The application name
    - name: resourceFilter
      description: Filter of assets from build to copy to upload
      default: '*.jar'
  resources:
    inputs:
    - name: source
      type: git
  steps:
  - name: package
    image: maven:3.6.3-openjdk-11-slim
    workingDir: /workspace/source
    command:
    - /usr/bin/mvn
    args:
    - -Dmaven.repo.local=$(workspaces.maven-repo.path)
    - clean
    - package
  - name: make-upload-dir
    image: quay.io/openshift-pipeline/openshift-cli:latest
    command: ["mkdir"]
    args:
      - -p
      - /workspace/source/upload
  - name: copy-assets
    image: quay.io/openshift-pipeline/openshift-cli:latest
    command: ["/bin/bash"]
    args:
      - '-c'
      - cp /workspace/source/target/$(params.resourceFilter) /workspace/source/upload
  - name: git-debug
    image: quay.io/openshift-pipeline/openshift-cli:latest
    workingDir: /workspace/source
    command: ["/bin/bash"]
    args:
      - '-c'
      - ls -lrta .
  - name: oc-binary-build
    #image: quay.io/openshift-pipeline/openshift-cli:latest
    image: image-registry.openshift-image-registry.svc:5000/{{ .Values.pipeline.namespace }}/pull-request-task:latest
    #command: ["/usr/local/bin/oc"]
    #command: ["/bin/bash"]
    workingDir: /workspace/source
    script: |
       #!/usr/bin/env bash
       echo "Hello from Bash!"
       ls -lrta .
       git status
       /usr/local/bin/oc start-build $(params.appName) --from-dir=./upload --wait
    #args:
    # - '-c'
    #- start-build
    #- -w
    #- -F
    #- $(params.appName)
    #- -n
    #- $(params.fromNamespace)
    #- --from-dir
    #- "./upload"
  - name: oc-tag-build-image
    image: quay.io/openshift-pipeline/openshift-cli:latest
    command: ["/usr/local/bin/oc"]
    workingDir: /workspace/source/upload
    args:
    - tag
    - $(params.fromNamespace)/$(params.appName):latest      
    - $(params.fromNamespace)/$(params.appName):$(params.imageTag)
  - name: oc-tag-image
    image: quay.io/openshift-pipeline/openshift-cli:latest
    command: ["/usr/local/bin/oc"]
    workingDir: /workspace/source/upload
    args:
    - tag
    - $(params.fromNamespace)/$(params.appName):$(params.imageTag)
    - $(params.toNamespace)/$(params.appName):$(params.imageTag)
---
apiVersion: tekton.dev/v1alpha1
kind: Task
metadata:
  name: mvn
spec:
  workspaces:
  - name: maven-repo
  params:
  - name: GOALS
    description: The Maven goals to run
    type: array
    default: ["package"]
  resources:
    inputs:
    - name: source
      type: git
  steps:
    - name: mvn
      image: gcr.io/cloud-builders/mvn
      workingDir: /workspace/source
      command: ["/usr/bin/mvn"]
      args:
        - -Dmaven.repo.local=$(workspaces.maven-repo.path)
        - "$(inputs.params.GOALS)"
---
kind: Task
apiVersion: tekton.dev/v1alpha1
metadata:
  name: sonar-scan
spec:
  workspaces:
  - name: maven-repo
  params:
    - name: POM_FILE
      description: The pom file to process
      default: ./pom.xml
    - name: SONAR_USER
      default: "admin"
    - name: SONAR_PASSWORD
      default: "admin"
    - name: SONAR_URL
      default: ""
  resources:
    inputs:
    - name: source
      type: git
    #results:
    #- name: scan-source
    #description: "Scan results are found here"
  steps:
    - name: scan-source
      image: gcr.io/cloud-builders/mvn
      envFrom:
        - configMapRef:
            name: sonarqube-config
            optional: true
        - secretRef:
            name: sonarqube-access
            optional: true
      command: ["/usr/bin/mvn"]
      workingDir: /workspace/source
      args:
      #- "-lrt"
      - -Dmaven.repo.local=$(workspaces.maven-repo.path)
      - package
      - org.sonarsource.scanner.maven:sonar-maven-plugin:3.6.0.1398:sonar
      - '-f' 
      - ./pom.xml
      - "-Dsonar.login=$(inputs.params.SONAR_USER)"
      - "-Dsonar.password=$(inputs.params.SONAR_PASSWORD)" 
      - "-Dsonar.host.url=$(inputs.params.SONAR_URL)"

