{{- if .Values.pipeline.deploy }}
---
apiVersion: triggers.tekton.dev/v1alpha1
kind: TriggerTemplate
metadata:
  name: {{ .Release.Name }}-qa-triggertemplate
  namespace: {{ .Values.pipeline.namespace }}
  labels:
    app.pelorus/name: {{ .Release.Name }}
spec:
  params:
    - name: gitrevision
      description: The git revision
      default: qa
    - name: gitrepositoryurl
      description: The git repository url
      default: {{ .Values.pipeline.source_repo }}
    - name: gitreponame
      description: The git repository name
      default: {{ .Release.Name }}
  resourcetemplates:
    - apiVersion: tekton.dev/v1alpha1
      kind: PipelineResource
      metadata:
        name: test-and-promote-pipeline-$(uid)
        labels:
          app.pelorus/name: {{ .Release.Name }}
      spec:
        type: git
        params:
        - name: revision
          value: qa
        - name: url
          value: $(params.gitrepositoryurl)
        - name: sslVerify
          value: "false"
    - apiVersion: tekton.dev/v1alpha1
      kind: PipelineRun
      metadata:
        name: {{ .Release.Name }}-qa-pipeline-run-$(uid)
        labels:
          app.pelorus/name: {{ .Release.Name }}
        annotations:
          argocd.argoproj.io/compare-options: IgnoreExtraneous        
      spec:
        pipelineRef:
          name: test-and-promote-pipeline
        serviceAccountNames:
          - taskName: promote-image
            serviceAccountName: {{ .Values.pipeline.service_account }}
        params:
          - name: NAMESPACE_TO
            value: {{ .Values.application_name }}-qa
          - name: NAMESPACE_FROM
            value: {{ .Values.pipeline.namespace }}
          - name: NAMESPACE_TOOLS
            value: {{ .Values.pipeline.namespace_tools }}
          - name: APP_NAME
            value: {{ .Values.application_name }}
          - name: IMAGE_TAG
            value: {{ .Values.application_tag }}
        resources:
          - name: test-and-promote-pipeline-git
            resourceRef:
              name: test-and-promote-pipeline-$(uid)
        workspaces:
        - name: local-tssc-repo
          emptyDir: {}
---
apiVersion: triggers.tekton.dev/v1alpha1
kind: TriggerTemplate
metadata:
  name: {{ .Release.Name }}-build-triggertemplate
  namespace: {{ .Values.pipeline.namespace }}
  labels:
    app.pelorus/name: {{ .Release.Name }}
spec:
  params:
    - name: gitrevision
      description: The git revision
      default: {{ .Values.pipeline.source_ref }}
    - name: gitrepositoryurl
      description: The git repository url
      default: {{ .Values.pipeline.source_repo }} 
    - name: gitreponame
      description: The git repository name
      default: {{ .Release.Name }}
  resourcetemplates:
    - apiVersion: tekton.dev/v1alpha1
      kind: PipelineResource
      metadata:
        name: maven-build-image-pipeline-git-$(uid)
        labels:
          app.pelorus/name: {{ .Release.Name }}
      spec:
        type: git
        params:
        - name: revision
          value: $(params.gitrevision)
        - name: url
          value: $(params.gitrepositoryurl)
        - name: sslVerify
          value: "false"
    - apiVersion: tekton.dev/v1alpha1
      kind: PipelineRun
      metadata:
        name: {{ .Release.Name }}-build-pipeline-run-$(uid)
        annotations:
          argocd.argoproj.io/compare-options: IgnoreExtraneous
        labels:
          app.pelorus/name: {{ .Release.Name }}
      spec:
        pipelineRef:
          name: maven-build-image-pipeline
        serviceAccountNames:
          - taskName: build-image
            serviceAccountName: {{ .Values.pipeline.service_account }}
        params:
          - name: NAMESPACE_TO
            value: {{ .Values.application_name }}-{{ .Values.environment }}
          - name: NAMESPACE_FROM
            value: {{ .Values.pipeline.namespace }}
          - name: APP_NAME
            value: {{ .Values.application_name }}
          - name: IMAGE_TAG
            value: $(params.gitrevision)
{{ if .Values.pipeline.googlechat_secret }}
          - name: GOOGLE_CHAT_SECRET
            value: {{ .Values.pipeline.googlechat_secret }}
{{- end }}
        resources:
          - name: maven-build-image-pipeline-git
            resourceRef:
              name: maven-build-image-pipeline-git-$(uid)
        workspaces:
        - name: local-tssc-repo
          emptyDir: {}
---
apiVersion: triggers.tekton.dev/v1alpha1
kind: TriggerBinding
metadata:
  name: {{ .Release.Name }}-pipelinebinding
  namespace: {{ .Values.pipeline.namespace }}
  labels:
    app.pelorus/name: {{ .Release.Name }}
spec:
  params:
    - name: gitrevision
      value: $(body.head_commit.id)
    - name: gitrepositoryurl
      value: $(body.repository.url)
    - name: gitreponame
      value: $(body.repository.name)
---
apiVersion: triggers.tekton.dev/v1alpha1
kind: EventListener
metadata:
  name: {{ .Release.Name }}-webhook
  namespace: {{ .Values.pipeline.namespace }}
spec:
  serviceAccountName: {{ .Values.pipeline.service_account }}
  triggers:
  - name: {{ .Release.Name }}-trigger-stage
    interceptors:
        - cel:
            filter: >-
              (header.match('X-GitHub-Event', 'push') &&
               body.ref.startsWith('refs/heads/main'))          
    bindings:
    - ref: {{ .Release.Name }}-pipelinebinding
    template:
      name: {{ .Release.Name }}-build-triggertemplate
  - name: {{ .Release.Name }}-trigger-qa
    interceptors:
        - cel:
            filter: >-
              (header.match('X-GitHub-Event', 'push') &&
               body.ref == 'refs/heads/qa')
    bindings:
    - ref: {{ .Release.Name }}-pipelinebinding
    template:
      name: {{ .Release.Name }}-qa-triggertemplate
---
apiVersion: route.openshift.io/v1
kind: Route
metadata:
  labels:
    app.kubernetes.io/managed-by: EventListener
    app.kubernetes.io/part-of: Triggers
    eventlistener: {{ .Release.Name }}-webhook
  name: webhook-{{ .Release.Name }}
  namespace: {{ .Values.pipeline.namespace }}
spec:
  port:
    targetPort: http-listener
  to:
    kind: Service
    name: el-{{ .Release.Name }}-webhook
    weight: 100
  wildcardPolicy: None
{{- end }} 
